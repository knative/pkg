# Copyright 2017, OpenCensus Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:public"])

load("@org_pubref_rules_protobuf//go:rules.bzl", "go_proto_library")

proto_library(
    name = "trace_proto",
    srcs = ["trace.proto"],
    deps = [
        "@com_google_protobuf//:timestamp_proto",
        "@com_google_protobuf//:wrappers_proto",
    ],
)

proto_library(
    name = "trace_config_proto",
    srcs = ["trace_config.proto"],
)

cc_proto_library(
    name = "trace_proto_cc",
    deps = [":trace_proto"],
)

cc_proto_library(
    name = "trace_config_proto_cc",
    deps = [":trace_config_proto"],
)

java_proto_library(
    name = "trace_proto_java",
    deps = [":trace_proto"],
)

java_proto_library(
    name = "trace_config_proto_java",
    deps = [":trace_config_proto"],
)

go_proto_library(
    name = "trace_proto_go",
    protos = ["trace.proto"],
    imports = [
        "external/com_google_protobuf/src",
    ],
    inputs = [
        "@com_google_protobuf//:well_known_protos",
    ],
    pb_options = [
       # omit the go_package declared in proto files to make bazel works as expect
       "paths=source_relative",
    ],
    deps = [
        "@com_github_golang_protobuf//ptypes/timestamp:go_default_library",
        "@com_github_golang_protobuf//ptypes/wrappers:go_default_library",
    ],
)

go_proto_library(
    name = "trace_config_proto_go",
    protos = ["trace_config.proto"],
    pb_options = [
       # omit the go_package declared in proto files to make bazel works as expect
       "paths=source_relative",
    ],
)
