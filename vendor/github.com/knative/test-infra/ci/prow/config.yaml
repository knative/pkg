# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ############################################################
# ####                                                    ####
# #### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ####
# ####     USE "make config" TO REGENERATE THIS FILE.     ####
# ####                                                    ####
# ############################################################
plank:
  job_url_template: 'https://prow.knative.dev/view/gcs/knative-prow/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{.Org}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://gubernator.knative.dev/pr/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://gubernator.knative.dev/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  job_url_prefix_config: 
    "*": "https://prow.knative.dev/view/gcs/"
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      # Update these versions when updating plank version in cluster.yaml
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190622-591061040"
      initupload: "gcr.io/k8s-prow/initupload:v20190622-591061040"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190622-591061040"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190622-591061040"
    gcs_configuration:
      bucket: "knative-prow"
      path_strategy: "explicit"
    gcs_credentials_secret: "test-account"
deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://console.cloud.google.com/storage/browser/
    testgrid_config: gs://knative-testgrid/config
    testgrid_root: https://testgrid.knative.dev/
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "artifacts/junit.*\\.xml":
      - "junit"
    announcement: "The old job viewer, Gubernator, has been deprecated in favour of this page, Spyglass.{{if .ArtifactPath}} For now, the old page is <a href='https://gubernator.knative.dev/build/{{.ArtifactPath}}'>still available</a>.{{end}} Please send feedback to Knative productivity."
  tide_update_period: 1s
prowjob_namespace: default
pod_namespace: test-pods
log_level: debug
branch-protection:
  orgs:
    knative:
      # Protect all branches in knative
      # This means all prow jobs with "always_run" set are required
      # to pass before tide can merge the PR.
      # Currently this is manually enabled by the knative org admins,
      # but it's stated here for documentation and reference purposes.
      protect: true
      # Admins can overrule checks
      enforce_admins: false
tide:
  queries:
  - repos:
    - knative/build
    - knative/build-templates
    - knative/client
    - knative/observability
    - knative/serving
    - knative/eventing
    - knative/eventing-contrib
    - knative/docs
    - knative/test-infra
    - knative/pkg
    - knative/caching
    - knative/website
    - knative/community
    - knative/sample-controller
    - knative/serving-operator
    - GoogleCloudPlatform/cloud-run-events
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/invalid-owners-file
  merge_method:
    knative: squash
  target_url: https://prow.knative.dev/tide
  pr_status_base_url: https://prow.knative.dev/pr
  blocker_label: tide/merge-blocker
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
presubmits:
  knative/serving:
  - name: pull-knative-serving-build-tests
    agent: kubernetes
    context: pull-knative-serving-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-unit-tests
    agent: kubernetes
    context: pull-knative-serving-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-integration-tests
    agent: kubernetes
    context: pull-knative-serving-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-upgrade-tests
    agent: kubernetes
    context: pull-knative-serving-upgrade-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-upgrade-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-upgrade-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-upgrade-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-smoke-tests
    agent: kubernetes
    context: pull-knative-serving-smoke-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-smoke-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-smoke-tests),?(\\s+|$)"
    decorate: true
    skip_branches:
    - "release-0.4"
    - "release-0.5"
    - "release-0.6"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--run-test"
        - "./test/e2e-smoke-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-go-coverage
    agent: kubernetes
    context: pull-knative-serving-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-serving-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-go-coverage-dev
    agent: kubernetes
    context: pull-knative-serving-go-coverage-dev
    always_run: false
    rerun_command: "/test pull-knative-serving-go-coverage-dev"
    trigger: "(?m)^/test (pull-knative-serving-go-coverage-dev),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage-dev:latest-dev
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-serving-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-serving-perf-tests
    agent: kubernetes
    context: pull-knative-serving-perf-tests
    always_run: false
    rerun_command: "/test pull-knative-serving-perf-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-perf-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/performance-tests.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/build:
  - name: pull-knative-build-build-tests
    agent: kubernetes
    context: pull-knative-build-build-tests
    always_run: true
    rerun_command: "/test pull-knative-build-build-tests"
    trigger: "(?m)^/test (all|pull-knative-build-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-build-unit-tests
    agent: kubernetes
    context: pull-knative-build-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-build-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-build-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-build-integration-tests
    agent: kubernetes
    context: pull-knative-build-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-build-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-build-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-build-go-coverage
    agent: kubernetes
    context: pull-knative-build-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-build-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-build-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-build-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/client:
  - name: pull-knative-client-build-tests
    agent: kubernetes
    context: pull-knative-client-build-tests
    always_run: true
    rerun_command: "/test pull-knative-client-build-tests"
    trigger: "(?m)^/test (all|pull-knative-client-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-unit-tests
    agent: kubernetes
    context: pull-knative-client-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-client-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-client-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-integration-tests
    agent: kubernetes
    context: pull-knative-client-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-client-go-coverage
    agent: kubernetes
    context: pull-knative-client-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-client-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-client-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-client-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  - name: pull-knative-client-integration-tests-latest-release
    agent: kubernetes
    context: pull-knative-client-integration-tests-latest-release
    always_run: true
    rerun_command: "/test pull-knative-client-integration-tests-latest-release"
    trigger: "(?m)^/test (all|pull-knative-client-integration-tests-latest-release),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-integration-tests-latest-release.sh"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/eventing:
  - name: pull-knative-eventing-build-tests
    agent: kubernetes
    context: pull-knative-eventing-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-eventing-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/eventing-contrib:
  - name: pull-knative-eventing-contrib-build-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-build-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-build-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-unit-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-integration-tests
    agent: kubernetes
    context: pull-knative-eventing-contrib-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-eventing-contrib-go-coverage
    agent: kubernetes
    context: pull-knative-eventing-contrib-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-eventing-contrib-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-eventing-contrib-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-eventing-contrib-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/docs:
  - name: pull-knative-docs-build-tests
    agent: kubernetes
    context: pull-knative-docs-build-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-build-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-unit-tests
    agent: kubernetes
    context: pull-knative-docs-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-integration-tests
    agent: kubernetes
    context: pull-knative-docs-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-docs-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-docs-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: docker-graph
        emptyDir: {}
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-docs-go-coverage
    agent: kubernetes
    context: pull-knative-docs-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-docs-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-docs-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-docs-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/build-templates:
  - name: pull-knative-build-templates-build-tests
    agent: kubernetes
    context: pull-knative-build-templates-build-tests
    always_run: true
    rerun_command: "/test pull-knative-build-templates-build-tests"
    trigger: "(?m)^/test (all|pull-knative-build-templates-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-build-templates-unit-tests
    agent: kubernetes
    context: pull-knative-build-templates-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-build-templates-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-build-templates-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-build-templates-integration-tests
    agent: kubernetes
    context: pull-knative-build-templates-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-build-templates-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-build-templates-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/pkg:
  - name: pull-knative-pkg-build-tests
    agent: kubernetes
    context: pull-knative-pkg-build-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-build-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-unit-tests
    agent: kubernetes
    context: pull-knative-pkg-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-integration-tests
    agent: kubernetes
    context: pull-knative-pkg-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-pkg-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-pkg-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/pkg
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-pkg-go-coverage
    agent: kubernetes
    context: pull-knative-pkg-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-pkg-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-pkg-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/pkg
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-pkg-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/test-infra:
  - name: pull-knative-test-infra-build-tests
    agent: kubernetes
    context: pull-knative-test-infra-build-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-build-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-unit-tests
    agent: kubernetes
    context: pull-knative-test-infra-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-test-infra-integration-tests
    agent: kubernetes
    context: pull-knative-test-infra-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-test-infra-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-test-infra-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/caching:
  - name: pull-knative-caching-build-tests
    agent: kubernetes
    context: pull-knative-caching-build-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-build-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-unit-tests
    agent: kubernetes
    context: pull-knative-caching-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-integration-tests
    agent: kubernetes
    context: pull-knative-caching-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-caching-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-caching-integration-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/caching
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-caching-go-coverage
    agent: kubernetes
    context: pull-knative-caching-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-caching-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-caching-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    path_alias: knative.dev/caching
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-caching-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/observability:
  - name: pull-knative-observability-build-tests
    agent: kubernetes
    context: pull-knative-observability-build-tests
    always_run: true
    rerun_command: "/test pull-knative-observability-build-tests"
    trigger: "(?m)^/test (all|pull-knative-observability-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-observability-unit-tests
    agent: kubernetes
    context: pull-knative-observability-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-observability-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-observability-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-observability-integration-tests
    agent: kubernetes
    context: pull-knative-observability-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-observability-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-observability-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  knative/sample-controller:
  - name: pull-knative-sample-controller-build-tests
    agent: kubernetes
    context: pull-knative-sample-controller-build-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-controller-build-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-controller-build-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-sample-controller-unit-tests
    agent: kubernetes
    context: pull-knative-sample-controller-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-sample-controller-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-sample-controller-unit-tests),?(\\s+|$)"
    decorate: true
    path_alias: knative.dev/sample-controller
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  GoogleCloudPlatform/cloud-run-events:
  - name: pull-googlecloudplatform-cloud-run-events-build-tests
    agent: kubernetes
    context: pull-googlecloudplatform-cloud-run-events-build-tests
    always_run: true
    rerun_command: "/test pull-googlecloudplatform-cloud-run-events-build-tests"
    trigger: "(?m)^/test (all|pull-googlecloudplatform-cloud-run-events-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-googlecloudplatform-cloud-run-events-unit-tests
    agent: kubernetes
    context: pull-googlecloudplatform-cloud-run-events-unit-tests
    always_run: true
    rerun_command: "/test pull-googlecloudplatform-cloud-run-events-unit-tests"
    trigger: "(?m)^/test (all|pull-googlecloudplatform-cloud-run-events-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-googlecloudplatform-cloud-run-events-integration-tests
    agent: kubernetes
    context: pull-googlecloudplatform-cloud-run-events-integration-tests
    always_run: true
    rerun_command: "/test pull-googlecloudplatform-cloud-run-events-integration-tests"
    trigger: "(?m)^/test (all|pull-googlecloudplatform-cloud-run-events-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-googlecloudplatform-cloud-run-events-go-coverage
    agent: kubernetes
    context: pull-googlecloudplatform-cloud-run-events-go-coverage
    always_run: true
    rerun_command: "/test pull-googlecloudplatform-cloud-run-events-go-coverage"
    trigger: "(?m)^/test (all|pull-googlecloudplatform-cloud-run-events-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-googlecloudplatform-cloud-run-events-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
  knative/serving-operator:
  - name: pull-knative-serving-operator-build-tests
    agent: kubernetes
    context: pull-knative-serving-operator-build-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-build-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-build-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-unit-tests
    agent: kubernetes
    context: pull-knative-serving-operator-unit-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-unit-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-integration-tests
    agent: kubernetes
    context: pull-knative-serving-operator-integration-tests
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-integration-tests),?(\\s+|$)"
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/prow-tests:stable
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-knative-serving-operator-go-coverage
    agent: kubernetes
    context: pull-knative-serving-operator-go-coverage
    always_run: true
    rerun_command: "/test pull-knative-serving-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-knative-serving-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-job-name=post-knative-serving-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=50"
        - "--github-token=/etc/covbot-token/token"
        volumeMounts:
        - name: covbot-token
          mountPath: /etc/covbot-token
          readOnly: true
      volumes:
      - name: covbot-token
        secret:
          secretName: covbot-token
periodics:
- cron: "10 */2 * * *"
  name: ci-knative-serving-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "6 8 * * *"
  name: ci-knative-serving-0.4-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.4
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 8 * * *"
  name: ci-knative-serving-0.5-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.5
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "28 8 * * *"
  name: ci-knative-serving-0.6-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.6
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 8 * * *"
  name: ci-knative-serving-0.7-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.7
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "28 */2 * * *"
  name: ci-knative-serving-istio-1.0-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.0-latest"
      - "--mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 */2 * * *"
  name: ci-knative-serving-istio-1.0-no-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.0-latest"
      - "--no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "39 */2 * * *"
  name: ci-knative-serving-istio-1.1-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.1-latest"
      - "--mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "50 */2 * * *"
  name: ci-knative-serving-istio-1.1-no-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.1-latest"
      - "--no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 */2 * * *"
  name: ci-knative-serving-istio-1.2-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.2-latest"
      - "--mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "1 */2 * * *"
  name: ci-knative-serving-istio-1.2-no-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/e2e-tests.sh"
      - "--istio-version"
      - "1.2-latest"
      - "--no-mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "56 9 * * *"
  name: ci-knative-serving-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "37 9 * * 2"
  name: ci-knative-serving-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "34 */2 * * *"
  name: ci-knative-serving-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/serving"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "38 8 * * *"
  name: ci-knative-serving-latency
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/metrics:latest
      imagePullPolicy: Always
      command:
      - "/metrics"
      args:
      - "--source-directory=ci-knative-serving-continuous"
      - "--artifacts-dir=$(ARTIFACTS)"
      - "--service-account=/etc/test-account/service-account.json"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 */3 * * *"
  name: ci-knative-serving-performance
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance-tests.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: E2E_MIN_CLUSTER_NODES
        value: "16"
      - name: E2E_MAX_CLUSTER_NODES
        value: "16"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 */3 * * *"
  name: ci-knative-serving-performance-mesh
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance-tests.sh"
      - "--mesh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: E2E_MIN_CLUSTER_NODES
        value: "16"
      - name: E2E_MAX_CLUSTER_NODES
        value: "16"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "13 9 * * *"
  name: ci-knative-serving-webhook-apicoverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/apicoverage.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: SYSTEM_NAMESPACE
        value: knative-serving
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-serving-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=80"
- cron: "34 * * * *"
  name: ci-knative-build-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "30 8 * * *"
  name: ci-knative-build-0.5-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.5
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "41 8 * * *"
  name: ci-knative-build-0.6-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.6
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "52 8 * * *"
  name: ci-knative-build-0.7-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.7
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "10 9 * * *"
  name: ci-knative-build-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "50 9 * * 2"
  name: ci-knative-build-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/build"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "58 */2 * * *"
  name: ci-knative-build-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/build"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      securityContext:
        privileged: true
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: docker-graph
        mountPath: /docker-graph
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: docker-graph
      emptyDir: {}
    - name: release-account
      secret:
        secretName: release-account
- cron: "51 8 * * *"
  name: ci-knative-build-latency
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/metrics:latest
      imagePullPolicy: Always
      command:
      - "/metrics"
      args:
      - "--source-directory=ci-knative-build-continuous"
      - "--artifacts-dir=$(ARTIFACTS)"
      - "--service-account=/etc/test-account/service-account.json"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-build-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-build-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=80"
- cron: "5 * * * *"
  name: ci-knative-client-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "40 9 * * *"
  name: ci-knative-client-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "21 9 * * 2"
  name: ci-knative-client-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "29 */2 * * *"
  name: ci-knative-client-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/client"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-client-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-client-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: client
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "20 * * * *"
  name: ci-knative-docs-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-docs-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-docs-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: docs
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "30 */2 * * *"
  name: ci-knative-eventing-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "36 8 * * *"
  name: ci-knative-eventing-0.5-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.5
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "47 8 * * *"
  name: ci-knative-eventing-0.6-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.6
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "58 8 * * *"
  name: ci-knative-eventing-0.7-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.7
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "15 9 * * *"
  name: ci-knative-eventing-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "56 9 * * 2"
  name: ci-knative-eventing-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "53 */2 * * *"
  name: ci-knative-eventing-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 */3 * * *"
  name: ci-knative-eventing-performance
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/performance-tests.sh"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: E2E_MIN_CLUSTER_NODES
        value: "16"
      - name: E2E_MAX_CLUSTER_NODES
        value: "16"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "35 * * * *"
  name: ci-knative-eventing-contrib-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "31 8 * * *"
  name: ci-knative-eventing-contrib-0.5-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.5
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 8 * * *"
  name: ci-knative-eventing-contrib-0.6-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.6
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "53 8 * * *"
  name: ci-knative-eventing-contrib-0.7-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--nopublish"
      - "--notag-release"
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
      - name: PULL_BASE_REF
        value: release-0.7
    volumes:
    - name: docker-graph
      emptyDir: {}
    - name: test-account
      secret:
        secretName: test-account
- cron: "10 9 * * *"
  name: ci-knative-eventing-contrib-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "51 9 * * 2"
  name: ci-knative-eventing-contrib-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "59 */2 * * *"
  name: ci-knative-eventing-contrib-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/eventing-contrib"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-eventing-contrib-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-eventing-contrib-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: eventing-contrib
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "31 * * * *"
  name: ci-knative-build-templates-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: build-templates
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "17 * * * *"
  name: ci-knative-pkg-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
    path_alias: knative.dev/pkg
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-pkg-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-pkg-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: pkg
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "6 * * * *"
  name: ci-knative-caching-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
    path_alias: knative.dev/caching
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 1 * * *"
  name: ci-knative-caching-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-caching-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: caching
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "3 * * * *"
  name: ci-knative-observability-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: observability
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "1 * * * *"
  name: ci-knative-sample-controller-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: sample-controller
    base_ref: master
    path_alias: knative.dev/sample-controller
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "42 * * * *"
  name: ci-knative-test-infra-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "48 * * * *"
  name: ci-knative-serving-operator-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "23 9 * * *"
  name: ci-knative-serving-operator-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "4 9 * * 2"
  name: ci-knative-serving-operator-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "1 */2 * * *"
  name: ci-knative-serving-operator-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/serving-operator"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-knative-serving-operator-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-knative-serving-operator-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: serving-operator
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "13 * * * *"
  name: ci-googlecloudplatform-cloud-run-events-continuous
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: GoogleCloudPlatform
    repo: cloud-run-events
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./test/presubmit-tests.sh"
      - "--all-tests"
      - "--emit-metrics"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/test-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "59 9 * * *"
  name: ci-googlecloudplatform-cloud-run-events-nightly-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: GoogleCloudPlatform
    repo: cloud-run-events
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--publish"
      - "--tag-release"
      volumeMounts:
      - name: nightly-account
        mountPath: /etc/nightly-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/nightly-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: nightly-account
      secret:
        secretName: nightly-account
- cron: "30 9 * * 2"
  name: ci-googlecloudplatform-cloud-run-events-dot-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: GoogleCloudPlatform
    repo: cloud-run-events
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--dot-release"
      - "--release-gcs knative-releases/cloud-run-events"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "37 */2 * * *"
  name: ci-googlecloudplatform-cloud-run-events-auto-release
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: GoogleCloudPlatform
    repo: cloud-run-events
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - "./hack/release.sh"
      - "--auto-release"
      - "--release-gcs knative-releases/cloud-run-events"
      - "--release-gcr gcr.io/knative-releases"
      - "--github-token /etc/hub-token/token"
      volumeMounts:
      - name: hub-token
        mountPath: /etc/hub-token
        readOnly: true
      - name: release-account
        mountPath: /etc/release-account
        readOnly: true
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/release-account/service-account.json
      - name: E2E_CLUSTER_REGION
        value: us-central1
    volumes:
    - name: hub-token
      secret:
        secretName: hub-token
    - name: release-account
      secret:
        secretName: release-account
- cron: "0 1 * * *"
  name: ci-googlecloudplatform-cloud-run-events-go-coverage
  labels:
      prow.k8s.io/pubsub.project: knative-tests
      prow.k8s.io/pubsub.topic: knative-monitoring
      prow.k8s.io/pubsub.runID: ci-googlecloudplatform-cloud-run-events-go-coverage
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: GoogleCloudPlatform
    repo: cloud-run-events
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/coverage:latest
      imagePullPolicy: Always
      command:
      - "/coverage"
      args:
      - "--artifacts=$(ARTIFACTS)"
      - "--cov-threshold-percentage=50"
- cron: "0 19 * * 1"
  name: ci-knative-cleanup
  agent: kubernetes
  decorate: true
  decoration_config:
    timeout: 86400000000000
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-tests:stable
      imagePullPolicy: Always
      command:
      - "./tools/cleanup/cleanup.sh"
      args:
      - "--project-resource-yaml ci/prow/boskos/resources.yaml"
      - "--days-to-keep-images 30"
      - "--hours-to-keep-clusters 24"
      - "--service-account /etc/test-account/service-account.json"
      - "--artifacts $(ARTIFACTS)"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
    volumes:
    - name: test-account
      secret:
        secretName: test-account
- cron: "0 12 * * *"
  name: ci-knative-flakes-reporter
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/flaky-test-reporter:latest
      imagePullPolicy: Always
      command:
      - "/flaky-test-reporter"
      args:
      - "--service-account=/etc/test-account/service-account.json"
      - "--github-account=/etc/flaky-test-reporter-github-token/token"
      - "--slack-account=/etc/flaky-test-reporter-slack-token/token"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      - name: flaky-test-reporter-github-token
        mountPath: /etc/flaky-test-reporter-github-token
        readOnly: true
      - name: flaky-test-reporter-slack-token
        mountPath: /etc/flaky-test-reporter-slack-token
        readOnly: true
    volumes:
    - name: test-account
      secret:
        secretName: test-account
    - name: flaky-test-reporter-github-token
      secret:
        secretName: flaky-test-reporter-github-token
    - name: flaky-test-reporter-slack-token
      secret:
        secretName: flaky-test-reporter-slack-token
- cron: "0 20 * * 1"
  name: ci-knative-prow-auto-bumper
  agent: kubernetes
  decorate: true
  extra_refs:
  - org: knative
    repo: test-infra
    base_ref: master
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/prow-auto-bumper:latest
      imagePullPolicy: Always
      command:
      - "/prow-auto-bumper"
      args:
      - "--github-account=/etc/prow-auto-bumper-github-token/token"
      - "--git-userid=knative-prow-updater-robot"
      - "--git-username='Knative Prow Updater Robot'"
      - "--git-email=knative-prow-updater-robot@google.com"
      volumeMounts:
      - name: test-account
        mountPath: /etc/test-account
        readOnly: true
      - name: prow-auto-bumper-github-token
        mountPath: /etc/prow-auto-bumper-github-token
        readOnly: true
      - name: prow-updater-robot-ssh-key
        mountPath: /root/.ssh
        readOnly: true
    volumes:
    - name: test-account
      secret:
        secretName: test-account
    - name: prow-auto-bumper-github-token
      secret:
        secretName: prow-auto-bumper-github-token
    - name: prow-updater-robot-ssh-key
      secret:
        secretName: prow-updater-robot-ssh-key
        defaultMode: 0400
- cron: "15 9 * * *"
  name: ci-knative-backup-artifacts
  agent: kubernetes
  decorate: true
  spec:
    containers:
    - image: gcr.io/knative-tests/test-infra/backups:latest
      imagePullPolicy: Always
      command:
      - "/backup.sh"
      args:
      - "/etc/backup-account/service-account.json"
      volumeMounts:
      - name: backup-account
        mountPath: /etc/backup-account
        readOnly: true
    volumes:
    - name: backup-account
      secret:
        secretName: backup-account
postsubmits:
  knative/serving:
  - name: post-knative-serving-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  - name: post-knative-serving-go-coverage-dev
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage-dev:latest-dev
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/build:
  - name: post-knative-build-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/client:
  - name: post-knative-client-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/eventing:
  - name: post-knative-eventing-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/eventing-contrib:
  - name: post-knative-eventing-contrib-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/docs:
  - name: post-knative-docs-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/pkg:
  - name: post-knative-pkg-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/caching:
  - name: post-knative-caching-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  GoogleCloudPlatform/cloud-run-events:
  - name: post-googlecloudplatform-cloud-run-events-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  knative/serving-operator:
  - name: post-knative-serving-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
