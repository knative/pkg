package(default_visibility = ["//prow:__subpackages__"])

load("//prow:def.bzl", "BUILD_CLUSTER", "MULTI_KIND", "component", "release")

# Usage:
#   bazel run //prow/cluster:foo.apply

release(
    "production",
    component("build", "deployment"),
    component("build_rbac", MULTI_KIND),
    component("cert-manager", MULTI_KIND),
    component("cluster-issuer", MULTI_KIND),
    component("crier", "deployment"),
    component("crier_rbac", MULTI_KIND),
    component("deck", "service", "deployment"),
    component("gce-ssd-retain", "storageclass"),
    component("ghproxy", MULTI_KIND),
    component(
        "grandmatriarch",
        MULTI_KIND,
        cluster = BUILD_CLUSTER,
    ),
    component("hook", "service", "deployment"),
    component("horologium", "deployment"),
    component(
        "mem-limit-range",
        "limitrange",
        cluster = BUILD_CLUSTER,
    ),
    component("needs-rebase", "deployment"),
    component("pipeline", "deployment"),
    component("plank", "service", "deployment"),
    component("prowjob", "customresourcedefinition"),
    component("pushgateway", "deployment"),
    component("sinker", "service", "deployment"),
    component("statusreconciler", "deployment"),
    component("tide", "service", "deployment"),
    component("tls-ing", "ingress"),
    component("tot", "service", "deployment"),
    component(
        "tune-sysctls",
        "daemonset",
        cluster = BUILD_CLUSTER,
    ),
)

component("starter", MULTI_KIND)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//prow/cluster/monitoring:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
