presubmits:
  kubernetes/kops:
  - name: pull-kops-bazel-build
    branches:
    - master
    always_run: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-build"
        resources:
          requests:
            memory: "2Gi"

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: bazel-build
  - name: pull-kops-bazel-test
    branches:
    - master
    always_run: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-test"
        resources:
          requests:
            memory: "2Gi"

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: bazel-test
  - name: pull-kops-e2e-kubernetes-aws
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-dind-enabled: "true"
      preset-e2e-platform-aws: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --check-leaked-resources=false
        - --cluster=
        - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release-dev/ci/latest-1.15.txt
        - --extract=ci/latest-1.15
        - --ginkgo-parallel
        - --kops-build
        - --provider=aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: e2e
  - name: pull-kops-verify-bazel
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20190125-cc5d6ecff3
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - --scenario=execute
        - --
        - ./hack/verify-bazel.sh

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: verify-bazel
  - name: pull-kops-verify-boilerplate
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20190125-cc5d6ecff3
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - --scenario=execute
        - --
        - ./hack/verify-boilerplate.sh

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: verify-boilerplate
  - name: pull-kops-verify-gofmt
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - ./hack/verify-gofmt.sh
        resources:
          requests:
            memory: "2Gi"

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: verify-gofmt
  - name: pull-kops-verify-govet
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20190125-cc5d6ecff3
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - --scenario=execute
        - --
        - make
        - govet

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: verify-govet
  - name: pull-kops-verify-packages
    branches:
    - master
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20190125-cc5d6ecff3
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - --scenario=execute
        - --
        - ./hack/verify-packages.sh

    annotations:
      testgrid-dashboards: presubmits-kops
      testgrid-tab-name: verify-packages
periodics:
- interval: 30m
  name: ci-kops-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
      args:
      - --repo=k8s.io/kops
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      - --scenario=execute
      - --
      - make
      - gcs-publish-ci
      - GCS_LOCATION=gs://kops-ci/bin
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true

  annotations:
    testgrid-dashboards: sig-release-misc
    testgrid-tab-name: kops-build
    testgrid-alert-email: kubernetes-release-team@googlegroups.com
postsubmits:
  kubernetes/kops:
  - name: kops-postsubmit
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "prow-postsubmit"
        - "UPLOAD_DEST=gs://kubernetes-release-dev/kops/ci"
        resources:
          requests:
            memory: "2Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-kops
