presubmits:
  kubernetes/kubernetes:
  # TODO(krzyzacy): Consider combine kubekins-e2e and kubekins-test
  - name: pull-kubernetes-verify
    always_run: true
    decorate: true
    skip_branches:
    - release-\d+.\d+ # per-release job
    annotations:
      fork-per-release: "true"
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
    path_alias: k8s.io/kubernetes
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./hack/jenkins/verify-dockerized.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: master
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
  - name: pull-kubernetes-verify
    always_run: true
    decorate: true
    branches:
    - release-1.15
    path_alias: k8s.io/kubernetes
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./hack/jenkins/verify-dockerized.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.15
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
  - name: pull-kubernetes-verify
    always_run: true
    decorate: true
    branches:
    - release-1.14
    path_alias: k8s.io/kubernetes
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./hack/jenkins/verify-dockerized.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.14
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
          # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
  - name: pull-kubernetes-verify
    always_run: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    # the podutils version above does newer branches
    branches:
    - release-1.13
    - release-1.12
    - release-1.11
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20190703-1f4d616
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - --scenario=kubernetes_verify
        - --
        - "--branch=${PULL_BASE_REF}"
        - --exclude-typecheck
        - --exclude-godep
        - --script=./hack/jenkins/verify-dockerized.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
periodics:
- interval: 1h
  name: ci-kubernetes-verify-master
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  annotations:
    fork-per-release: "true"
    fork-per-release-periodic-interval: 2h 2h 6h 24h
    fork-per-release-generic-suffix: "true"
    testgrid-dashboards: sig-release-master-blocking, google-unit
    testgrid-tab-name: verify-master
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
    description: "Ends up running: make verify"
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - ./hack/jenkins/verify-dockerized.sh
      env:
      - name: KUBE_FORCE_VERIFY_CHECKS
        value: "y"
      - name: EXCLUDE_READONLY_PACKAGE
        value: "y"
      - name: KUBE_VERIFY_GIT_BRANCH
        value: master
      - name: REPO_DIR
        value: /workspace/k8s.io/kubernetes
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4
