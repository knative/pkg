# Autogenerated by genjobs.go, do NOT edit!
# see genjobs.go, which you can run with hack/update-config.sh
presubmits:
  kubernetes-security/kubernetes:
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-publishing-bot-validate
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/publishing-bot
      repo: publishing-bot
    name: pull-publishing-bot-validate
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-publishing-bot-validate
    run_if_changed: ^staging/publishing.*$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - run
        - k8s.io/publishing-bot/cmd/validate-rules
        - /home/prow/go/src/k8s.io/kubernetes/staging/publishing/rules.yaml
        command:
        - go
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-publishing-bot-validate,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-aws-eks-1-13-correctness
    labels:
      preset-aws-credential-aws-oss-testing: "true"
      preset-kubernetes-e2e-aws-eks-1-13: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-aws-eks-1-13-correctness
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-aws-eks-1-13-correctness
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --check-version-skew=false
        - --deployment=eks
        - --provider=eks
        - --gce-ssh=
        - --extract=local
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --minStartupPods=8
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-aws-eks-1-13-correctness
        - --timeout=180m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-aws-eks-1-13-correctness
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        imagePullPolicy: Always
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-aws-eks-1-13-correctness,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-aks-engine-azure
    labels:
      preset-azure-cred: "true"
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-aks-engine-azure
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-aks-engine-azure
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --root=/go/src
        - --service-account=/etc/service-account/service-account.json
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=460
        - --scenario=kubernetes_e2e
        - --
        - --gce-ssh=
        - --test=true
        - --up=true
        - --down=true
        - --deployment=acsengine
        - --build=bazel
        - --provider=skeleton
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-aks-engine-azure
        - --ginkgo-parallel=30
        - --acsengine-agentpoolcount=3
        - --acsengine-admin-username=azureuser
        - --acsengine-creds=$AZURE_CREDENTIALS
        - --acsengine-orchestratorRelease=1.16
        - --acsengine-mastervmsize=Standard_DS2_v2
        - --acsengine-agentvmsize=Standard_DS2_v2
        - --acsengine-hyperkube=True
        - --acsengine-location=centralus
        - --acsengine-public-key=$AZURE_SSH_PUBLIC_KEY_FILE
        - --acsengine-template-url=https://raw.githubusercontent.com/Azure/aks-engine/master/examples/kubernetes.json
        - --acsengine-download-url=https://github.com/Azure/aks-engine/releases/download/v0.39.0/aks-engine-v0.39.0-linux-amd64.tar.gz
        - --test_args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\] --ginkgo.skip=\[sig-node\]\sMount\spropagation|\[sig-network\]\sNetwork\sshould\sset\sTCP\sCLOSE_WAIT\stimeout|\[sig-storage\]\sPersistentVolumes-local\sStress\swith\slocal\svolume\sprovisioner\s\[Serial\]\sshould\suse\sbe\sable\sto\sprocess\smany\spods\sand\sreuse\slocal\svolumes|should\sunmount\sif\spod\sis\sgracefully\sdeleted\swhile\skubelet\sis\sdown\s\[Disruptive\]\[Slow\]|should\sunmount\sif\spod\sis\sforce\sdeleted\swhile\skubelet\sis\sdown\s\[Disruptive\]\[Slow\]|\[sig-network\]\sServices\sshould\sbe\sable\sto\screate\sa\sfunctioning\sNodePort\sservice|\[sig-scheduling\]\sSchedulerPredicates\s\[Serial\]\svalidates\sMaxPods\slimit\snumber\sof\spods\sthat\sare\sallowed\sto\srun\s\[Slow\]|\[sig-storage\]\sDynamic\sProvisioning\sDynamicProvisioner\sDefault\sshould\screate\sand\sdelete\sdefault\spersistent\svolumes\s\[Slow\]|\[sig-storage\]\sDynamic\sProvisioning\sDynamicProvisioner\sshould\sprovision\sstorage\swith\sdifferent\sparameters|\[sig-storage\]\sDynamic\sProvisioning\sDynamicProvisioner\sshould\stest\sthat\sdeleting\sa\sclaim\sbefore\sthe\svolume\sis\sprovisioned\sdeletes\sthe\svolume.|\[sig-apps\]\sStatefulSet\s\[k8s.io\]\sBasic\sStatefulSet\sfunctionality\s\[StatefulSetBasic\]\sshould\sadopt\smatching\sorphans\sand\srelease\snon-matching\spods|\[sig-apps\]\sStatefulSet\s\[k8s.io\]\sBasic\sStatefulSet\sfunctionality\s\[StatefulSetBasic\]\sshould\snot\sdeadlock\swhen\sa\spod.s\spredecessor\sfails|\[sig-apps\]\sStatefulSet\s\[k8s.io\]\sBasic\sStatefulSet\sfunctionality\s\[StatefulSetBasic\]\sshould\sperform\srolling\supdates\sand\sroll\sbacks\sof\stemplate\smodifications\swith\sPVCs|\[sig-apps\]\sStatefulSet\s\[k8s.io\]\sBasic\sStatefulSet\sfunctionality\s\[StatefulSetBasic\]\sshould\sprovide\sbasic\sidentity|\[sig-storage\]\sPersistentVolumes\sDefault\sStorageClass\spods\sthat\suse\smultiple\svolumes\sshould\sbe\sreschedulable|\[sig-storage\]\sPVC\sProtection|\[sig-storage\]\sDynamic\sProvisioning\s\[k8s.io\]\sGlusterDynamicProvisioner|\[sig-storage\]\sVolumes\sAzure\sDisk\sshould\sbe\smountable\s\[Slow\]|\[sig-apps\]\sNetwork\sPartition\s\[Disruptive\]\s\[Slow\]|\[sig-network\]\sDNS\sconfigMap|\[k8s.io\]\s\[sig-node\]\sKubelet\s\[Serial\]\s\[Slow\]\s\[k8s.io\]\s\[sig-node\]\sregular\sresource\susage\stracking\sresource\stracking\sfor\s0\spods\sper\snode|\[k8s.io\]\s\[sig-node\]\sKubelet\s\[Serial\]\s\[Slow\]\s\[k8s.io\]\s\[sig-node\]\sregular\sresource\susage\stracking\sresource\stracking\sfor\s100\spods\sper\snode|Horizontal\spod\sautoscaling\s\(scale\sresource:\sCPU\)|\[sig-storage\]\sDynamic\sProvisioning\sDynamicProvisioner\sExternal\sshould\slet\san\sexternal\sdynamic\sprovisioner\screate\sand\sdelete\spersistent\svolumes\s\[Slow\]|ESIPP|\[sig-network\]\sServices\sshould\spreserve\ssource\spod\sIP\sfor\straffic\sthru\sservice\scluster\sIP|In-tree\sVolumes|PersistentVolumes-local|CSI\sVolumes|should\swrite\sentries\sto\s/etc/hosts|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:.+\]
        - --timeout=420m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-aks-engine-azure
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-aks-engine-azure,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce-rbe
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-rbe
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-gce-rbe
    skip_branches:
    - release-\d+\.\d+
    skip_report: true
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --inject-bazelrc=build --config=ci
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-rbe
        command:
        - ../test-infra/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-rbe,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-alpha-features
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-alpha-features
    rerun_command: /test pull-security-kubernetes-e2e-gce-alpha-features
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=KUBE_FEATURE_GATES=AllAlpha=true,CSIMigration=false
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --runtime-config=api/all=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-alpha-features
        - --test_args=--ginkgo.focus=\[Feature:(StorageVersionHash|Audit|BlockVolume|CustomResourcePublishOpenAPI|CustomResourceWebhookConversion|PodPreset|ExpandCSIVolumes|ExpandInUseVolumes|VolumeSubpathEnvExpansion|RunAsGroup|TTLAfterFinished|NodeLease|VolumeSnapshotDataSource)\]|Networking
          --ginkgo.skip=Networking-Performance|IPv6|Feature:Volumes|gcePD-external --minStartupPods=8
        - --timeout=180m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-alpha-features
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-alpha-features,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-windows-gce
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: yujuhong
      path_alias: k8s.io/gce-k8s-windows-testing
      repo: gce-k8s-windows-testing
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-gce-windows: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-windows-gce
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-windows-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --build=gce-windows-bazel
        - --check-leaked-resources
        - --cluster=
        - --extract=local
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=8
        - --provider=gce
        - --gcp-nodes=2
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/gce-k8s-windows-testing/run-e2e.sh
        - --test-cmd-args=--ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]
          --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Feature:.+\] --minStartupPods=8
        - --test-cmd-args=--node-os-distro=windows
        - --timeout=120m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-windows-gce,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-kind
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 40m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kubeadm
      repo: kubeadm
    - base_ref: master
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/kind
      repo: kind
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
    name: pull-security-kubernetes-e2e-kind
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-kind
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/single-cp/single-cp.yaml
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        command:
        - runner.sh
        - kubetest
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kind,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-e2e-kind
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 40m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kubeadm
      repo: kubeadm
    - base_ref: master
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/kind
      repo: kind
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
    name: pull-security-kubernetes-e2e-kind
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-kind
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/single-cp/single-cp.yaml
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        command:
        - runner.sh
        - kubetest
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kind,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-kind
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 40m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kubeadm
      repo: kubeadm
    - base_ref: master
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/kind
      repo: kind
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
    name: pull-security-kubernetes-e2e-kind
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-kind
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/ha-cp/ha-cp.yaml
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        command:
        - runner.sh
        - kubetest
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kind,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-e2e-kind
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 40m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kubeadm
      repo: kubeadm
    - base_ref: master
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/kind
      repo: kind
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
    name: pull-security-kubernetes-e2e-kind
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-kind
    skip_branches:
    - release-1.15
    - release-1.14
    - release-1.13
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=build
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/ha-cp/ha-cp.yaml
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        command:
        - runner.sh
        - kubetest
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kind,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-e2e-containerd-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-containerd-gce
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-containerd-gce
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --env=KUBE_CONTAINER_RUNTIME=containerd
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-containerd-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-containerd-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-containerd-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-node-e2e-containerd
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e-containerd
    optional: true
    rerun_command: /test pull-security-kubernetes-node-e2e-containerd
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-c8d-pr-node-e2e
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock
          --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file=
          --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"
          --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e-containerd,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-node-e2e-alpha
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e-alpha
    rerun_command: /test pull-security-kubernetes-node-e2e-alpha
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--feature-gates=AllAlpha=true,CSIMigration=false,RotateKubeletServerCertificate=false
          --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeAlphaFeature:.+\]"
          --skip="\[Flaky\]|\[Serial\] --flakeAttempts=2"
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e-alpha,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-cross
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-cross
    rerun_command: /test pull-security-kubernetes-cross
    run_if_changed: ^((build\/|hack\/lib\/).*)|(.*Makefile.*)$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=execute
        - --
        - --env=KUBE_RELEASE_RUN_TESTS=n
        - make
        - release
        image: gcr.io/k8s-testimages/bootstrap:v20190703-1f4d616
        name: ""
        resources:
          requests:
            cpu: "7"
            memory: 41Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-cross,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/legacy/config.yaml
        - --test-cmd-args=--testconfig=testing/load/legacy/config.yaml
        - --test-cmd-args=--testoverrides=./testing/load/legacy/kubemark/500_nodes/override.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/load/kubemark/500_nodes/override.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-gce-rbe
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-rbe
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-gce-rbe
    skip_report: true
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --inject-bazelrc=build --config=ci
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-rbe
        command:
        - ../test-infra/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-rbe,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-e2e-containerd-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-containerd-gce
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-containerd-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --env=KUBE_CONTAINER_RUNTIME=containerd
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-containerd-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-containerd-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-containerd-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/load/kubemark/500_nodes/override.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-bazel-build
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - -c
        - |
          ../test-infra/hack/bazel.sh build --config=remote --remote_instance_name=projects/k8s-prow-builds/instances/default_instance $(bazel query --keep_going --noshow_progress "kind(.*_binary, rdeps(//... -//vendor/..., //...)) except attr('tags', 'manual', //...)") //build/release-tars
        command:
        - bash
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-bazel-test
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - --
        - -//build/...
        - -//vendor/...
        command:
        - ../test-infra/hack/bazel.sh
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-e2e-gce-rbe
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-rbe
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-gce-rbe
    skip_report: true
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --inject-bazelrc=build --config=ci
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=80m
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-rbe
        command:
        - ../test-infra/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-rbe,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-west1-b
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-e2e-containerd-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-containerd-gce
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-containerd-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=105
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --env=KUBE_CONTAINER_RUNTIME=containerd
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-containerd-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\]
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-containerd-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-containerd-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/load/kubemark/500_nodes/override.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-bazel-build
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - -c
        - |
          ../test-infra/hack/bazel.sh build --config=remote --remote_instance_name=projects/k8s-prow-builds/instances/default_instance $(bazel query --keep_going --noshow_progress "kind(.*_binary, rdeps(//... -//vendor/..., //...)) except attr('tags', 'manual', //...)") //build/release-tars
        command:
        - bash
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-bazel-test
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - --
        - -//build/...
        - -//vendor/...
        command:
        - ../test-infra/hack/bazel.sh
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.16
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.16
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-100-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-100-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-100-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-nodes=100
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-100-performance
        - --tear-down-previous
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--prometheus-scrape-etcd
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/density/100_nodes/override.yaml
        - --test-cmd-args=--testoverrides=./testing/load/gce/throughput_override.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_dns_probes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-100-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-100-performance,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-big-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gce-big-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-big-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=270
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=n1-standard-4
        - --extract=local
        - --gcp-nodes=500
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-a
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-big-performance
        - --tear-down-previous
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--prometheus-scrape-etcd
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_dns_probes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=240m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-big-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-big-performance,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-large-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gce-large-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-large-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=570
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=n1-standard-8
        - --extract=local
        - --gcp-nodes=2000
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-a
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-large-performance
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--nodes=2000
        - --test-cmd-args=--prometheus-scrape-etcd
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/density/2000_nodes/override.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_dns_probes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=540m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-large-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-large-performance,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    skip_branches:
    - release-\d+\.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testoverrides=./testing/load/kubemark/500_nodes/override.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-scale
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-scale: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-kubemark-e2e-gce-scale
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-scale
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/perf-tests=master
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=1220
        - --scenario=kubernetes_e2e
        - --
        - --build
        - --cluster=
        - --extract=local
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=82
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=5000
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-scale
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=5000
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=/workspace/_artifacts
        - --test-cmd-args=--testconfig=testing/density/config.yaml
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=1200m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-scale
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-scale,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-storage-slow
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-storage-slow
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-storage-slow
    run_if_changed: ^(pkg\/controller\/volume|pkg\/kubelet\/volumemanager|pkg\/volume|pkg\/util\/mount|test\/e2e\/storage|test\/e2e\/testing-manifests\/storage-csi)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=125
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-storage-slow
        - --test_args=--ginkgo.focus=\[sig-storage\].*\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|gcePD-external
          --minStartupPods=8
        - --timeout=80m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-storage-slow
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-storage-slow,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-storage-slow-rbe
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-storage-slow-rbe
    optional: true
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-e2e-gce-storage-slow-rbe
    run_if_changed: ^(pkg\/controller\/volume|pkg\/kubelet\/volumemanager|pkg\/volume|pkg\/util\/mount|test\/e2e\/storage|test\/e2e\/testing-manifests\/storage-csi)
    skip_report: true
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --inject-bazelrc=build --config=ci
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-storage-slow
        - --test_args=--ginkgo.focus=\[sig-storage\].*\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|gcePD-external
          --minStartupPods=8
        - --timeout=80m
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-storage-slow-rbe
        command:
        - ../test-infra/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-storage-slow-rbe,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-csi-serial
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-csi-serial
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-csi-serial
    run_if_changed: ^(pkg\/controller\/volume|pkg\/kubelet\/volumemanager|pkg\/volume|pkg\/util\/mount|test\/e2e\/storage|test\/e2e\/testing-manifests\/storage-csi)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=150
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-csi-serial
        - --test_args=--ginkgo.focus=CSI.*(\[Serial\]|\[Disruptive\]) --ginkgo.skip=\[Flaky\]|\[Feature:.+\]|gcePD-external
          --minStartupPods=8
        - --timeout=120m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-csi-serial
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-csi-serial,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-iscsi
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-iscsi
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-iscsi
    run_if_changed: (pkg\/volume\/iscsi)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=150
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=ubuntu
        - --image-family=ubuntu-gke-1804-lts-1
        - --image-project=ubuntu-os-gke-cloud
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --ginkgo-parallel=30
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-iscsi
        - --test_args=--ginkgo.focus=\[Driver:.iscsi\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]
          --minStartupPods=8
        - --timeout=120m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-iscsi
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-iscsi,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-iscsi-serial
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-iscsi-serial
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-iscsi-serial
    run_if_changed: (pkg\/volume\/iscsi)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=150
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=ubuntu
        - --image-family=ubuntu-gke-1804-lts-1
        - --image-project=ubuntu-os-gke-cloud
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-iscsi-serial
        - --test_args=--ginkgo.focus=\[Driver:.iscsi\].*(\[Serial\]|\[Disruptive\]) --ginkgo.skip=\[Flaky\]
          --minStartupPods=8
        - --timeout=120m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-iscsi-serial
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-iscsi-serial,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-build
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    skip_branches:
    - release-\d+.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - -c
        - |
          ../test-infra/hack/bazel.sh build --config=remote --remote_instance_name=projects/k8s-prow-builds/instances/default_instance $(bazel query --keep_going --noshow_progress "kind(.*_binary, rdeps(//... -//vendor/..., //...)) except attr('tags', 'manual', //...)") //build/release-tars
        command:
        - bash
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-test
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    skip_branches:
    - release-\d+.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - --
        - -//build/...
        - -//vendor/...
        command:
        - ../test-infra/hack/bazel.sh
        image: launcher.gcr.io/google/bazel:0.25.2
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-conformance-image-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-security-kubernetes-conformance-image-test
    optional: true
    rerun_command: /test pull-security-kubernetes-conformance-image-test
    run_if_changed: conformance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --root=/go/src
        - --repo=k8s.io/test-infra=master
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=execute
        - --
        - bash
        - --
        - -c
        - cd ./../../k8s.io/kubernetes && source ./../test-infra/experiment/kind-conformance-image-e2e.sh
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-conformance-image-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-dependencies
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-dependencies
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-dependencies
    skip_branches:
    - release-\d+.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: WHAT
          value: vendor vendor-licenses
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: main
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-dependencies,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-dependencies
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-dependencies
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-dependencies
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: WHAT
          value: vendor vendor-licenses
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        name: main
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-dependencies,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-dependencies-canary
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-dependencies-canary
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-dependencies-canary
    skip_branches:
    - release-\d+.\d+
    skip_report: true
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: WHAT
          value: vendor vendor-licenses
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: main
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-dependencies-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.14
    - release-1.13
    - release-1.12
    - release-1.11
    cluster: security
    context: pull-security-kubernetes-godeps
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-godeps
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-godeps
    run_if_changed: ^((build\/|Godeps\/|vendor\/|hack\/lib\/|hack\/.*godep|staging\/).*)$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "Y"
        - name: WHAT
          value: godeps staging-godeps godep-licenses
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: main
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-godeps,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-integration
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-integration
    rerun_command: /test pull-security-kubernetes-integration
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_verify
        - --
        - --branch=${PULL_BASE_REF}
        - --prow
        image: gcr.io/k8s-testimages/bootstrap:v20190703-1f4d616
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-integration,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-integration-podutil
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-integration-podutil
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-integration-podutil
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/test-dockerized.sh
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: master
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-integration-podutil,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-build-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build-canary
    rerun_command: /test pull-security-kubernetes-bazel-build-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_bazel
        - --timeout=60
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build-canary
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_execute_bazel
        - --timeout=60
        - --
        - make
        - bazel-test
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-integration-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test-integration-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-integration-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_execute_bazel
        - --
        - --test=//test/integration/...
        - --test-args=--config=integration
        - --timeout=60
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test-integration-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-local-e2e
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-security-kubernetes-local-e2e
    optional: true
    rerun_command: /test pull-security-kubernetes-local-e2e
    run_if_changed: (hyperkube|local-up-cluster)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=140
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --deployment=local
        - --ginkgo-parallel=1
        - --provider=local
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[sig\-apps\]\sDaemon\sset\s\[Serial\]\sshould\srollback\swithout\sunnecessary\srestarts\s\[Conformance\]
        - --timeout=120m
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-local-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    skip_branches:
    - release-\d+.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-verify
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-verify
    skip_branches:
    - release-\d+.\d+
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/verify-dockerized.sh
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: master
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.15
    cluster: security
    context: pull-security-kubernetes-verify
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-verify
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/verify-dockerized.sh
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.15
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.15
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.14
    cluster: security
    context: pull-security-kubernetes-verify
    decorate: true
    decoration_config:
      gcs_configuration:
        bucket: kubernetes-security-prow
        default_org: kubernetes
        default_repo: kubernetes
        path_strategy: legacy
      gcs_credentials_secret: service-account
      grace_period: 15s
      timeout: 2h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-verify
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/verify-dockerized.sh
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.14
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-1.14
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    - release-1.12
    - release-1.11
    cluster: security
    context: pull-security-kubernetes-verify
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    rerun_command: /test pull-security-kubernetes-verify
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_verify
        - --
        - --branch=${PULL_BASE_REF}
        - --exclude-typecheck
        - --exclude-godep
        - --script=./hack/jenkins/verify-dockerized.sh
        image: gcr.io/k8s-testimages/bootstrap:v20190703-1f4d616
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-aks-engine-azure-windows
    labels:
      preset-azure-acsengine: "true"
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-aks-engine-azure-windows
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-aks-engine-azure-windows
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=480
        - --scenario=kubernetes_e2e
        - --
        - --test=true
        - --up=true
        - --down=true
        - --deployment=acsengine
        - --provider=skeleton
        - --build=bazel
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-aks-engine-azure-windows
        - --ginkgo-parallel=4
        - --acsengine-admin-username=azureuser
        - --acsengine-admin-password=AdminPassw0rd
        - --acsengine-creds=$AZURE_CREDENTIALS
        - --acsengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --acsengine-public-key=$AZURE_SSH_PUBLIC_KEY_FILE
        - --acsengine-winZipBuildScript=$WIN_BUILD
        - --acsengine-orchestratorRelease=1.15
        - --acsengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_release_staging.json
        - --acsengine-win-binaries
        - --acsengine-hyperkube
        - --acsengine-agentpoolcount=2
        - --test_args=--ginkgo.flakeAttempts=2 --num-nodes=2 --node-os-distro=windows
          --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption
          --ginkgo.skip=\[LinuxOnly\]|GMSA|\[Serial\]
        - --timeout=450m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-aks-engine-azure-windows
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190813-5765933-master
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-aks-engine-azure-windows,?($|\s.*)
